1. Database Schema
2. need spec for searching/filtering
3. Describe: how is search done and categories filter; blobs or files



2. spec for searching/filtering
	- Search specs: Buyer will have the ability to search a database of items via search bar, a simple search function such as LIKE % will be used.
	- Filtering specs: Items will be sorted via by category, price, location, etc. The buyer will have the option of narrowing down their search queries by selecting the desired item filters.



all data will be stored as blobs instead of in a filesystem. 
3. searchItemByID(product_id int)
	- returns all item's specs in JSON format, the data will then go through an HTML/CSS parser and list all item details.
   searchItembyName(String product)
        - returns all item's specs "






a) some brief greeting  and description of what search terms to use to get response from your prototype (e.g. what to type in search bar - this depends on what content you have there)


http://sfsuse.com/~sp17g09/buysellsfsu/users
user: user@example.com
pass: password


We have been working on an authentication system and database manipulation functions, our search function is very close to completion, you may list the users by clicking 'list users' additionally you may add a new user by pressing 'new users'. The search function to be implemented will be using a simple function built into mySQL ( LIKE %string% ) this will return all matching characters related to the input string. We have been working on relational aspects of our application such as linking "tags" to our bookmarks. Along with relational functions we have implemented a password hashing system to hide passwords instead of leaving them in plain sight.



b) a link to vertical prototype app on your deployment infrastructure (same as final product). Anthony and I should be able to run your vertical prototype by clicking on the link



c)text describing how to find the branch containing vertical prototype code (with a link) - this is so Anthony can review the code, its documentation, deployment etc.


We are working with the MVC infastructure, links are as follows


Controllers:

https://github.com/jasonh9/csc648-team09/tree/master/buysellsfsu/src/Controller


Model:

https://github.com/jasonh9/csc648-team09/tree/master/buysellsfsu/src/Model



View:

https://github.com/jasonh9/csc648-team09/tree/master/buysellsfsu/src/View
